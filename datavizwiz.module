<?php

/**
 * Comment is published.
 */
define('DVW_', 0);

// http://localhost/node/24836?sort=asc&order=Applicant

function datavizwiz_theme_registry_alter(&$theme_registry) {
  // Remove the first path under 'node' which is the one for the
  // module that created the template
  $template = 'node';
  $originalpath = array_shift($theme_registry[$template]['theme paths']);

  // Get the path to your module
  $modulepath = drupal_get_path('module', 'datavizwiz');

  // Stick the original path and then your module path back on top
  array_unshift($theme_registry[$template]['theme paths'], $originalpath, $modulepath);
}

function datavizwiz_theme() {
  return array(
      'datavizwiz_displaydata' => array(
          'arguments' => array('node' => NULL),
      ),
  );
}

function theme_datavizwiz_displaydata($node) {
  drupal_add_js(drupal_get_path('module', 'datavizwiz') . '/libraries/mapping/openlayers/OpenLayers.js');
  drupal_add_js(drupal_get_path('module', 'datavizwiz') . '/js/tabs.js');
  drupal_add_css(drupal_get_path('module', 'datavizwiz') . '/css/tabs.css');

  _datavizwiz_add_javascript($markers);

  //drupal_add_js("$(function(){ $('#experiment').visualize({type: 'pie', height: '300px', width: '420px'}); });",'inline');

  

  $data_table_name = $node->field_dvw_datatable[0]['value'];
  $dataset_metadata = _datavizwiz_get_dataset_metadata($node->nid);
 
  $output .= _datavizwiz_add_tabhtml();
  $output .= _datavizwiz_summary_table($dataset_metadata, $data_table_name);
  return $output;
}

function datavizwiz_graph() {
  return _datavizwiz_experiment_pie_table();
  
}


function _datavizwiz_add_tabhtml() {
  return '<div class="tabs">
        <ul class="tabNavigation">
            <li><a href="#first">Map</a></li>
            <li><a href="#second">Pie</a></li>
            <li><a href="#third">Bar</a></li>
        </ul>
        <div id="first">
          <div id="datamap" style="height: 250px; width: 100%;"></div>
        </div>
        <div id="second">' .
        // . _datavizwiz_experiment_pie_table() .
        '</div>
        <div id="third">
            <h2>Third</h2>
            <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>
        </div>
    </div>';
}

function _datavizwiz_add_javascript($markers) {
  $script = "        var map, layer, markers;

        function mapInit(){
            //OpenLayers.ProxyHost='/proxy/?url=';
            map = new OpenLayers.Map('datamap');
            layer = new OpenLayers.Layer.WMS( 'OpenLayers WMS', 
                'http://vmap0.tiles.osgeo.org/wms/vmap0', {layers: 'basic'} );
                
            map.addLayer(layer);
            map.setCenter(new OpenLayers.LonLat(0, 0), 0);

            markers = new OpenLayers.Layer.Markers('Markers');
            map.addLayer(markers);

            var size = new OpenLayers.Size(21,25);
            var offset = new OpenLayers.Pixel(-(size.w/2), -size.h);
            var icon = new OpenLayers.Icon('http://www.openlayers.org/dev/img/marker.png',size,offset);
            markers.addMarker(new OpenLayers.Marker(new OpenLayers.LonLat(0,0),icon));
            " . $markers . "
            var halfIcon = icon.clone();
            markers.addMarker(new OpenLayers.Marker(new OpenLayers.LonLat(0,45),halfIcon));

            marker = new OpenLayers.Marker(new OpenLayers.LonLat(90,10),icon.clone());
            marker.setOpacity(0.2);
            marker.events.register('mousedown', marker, function(evt) { alert(this.icon.url); OpenLayers.Event.stop(evt); });
            markers.addMarker(marker); 
            map.addControl(new OpenLayers.Control.LayerSwitcher());
            map.zoomToMaxExtent();

            halfIcon.setOpacity(0.5);
        };

        $(function() { mapInit(); });
";
  drupal_add_js($script, 'inline');
}

/**
 * Implementation of hook_nodeapi().
 *
 * The module will add/modify the datavizwiz tables as nodes are inserted/updated.
 */
function datavizwiz_nodeapi(&$node, $op, $arg = NULL) {
  switch ($op) {
//    case 'load':
//      $node->private = db_result(db_query('SELECT private FROM {node_access_example} WHERE nid = %d', $node->nid));
//      break;
    case 'insert':
      if ($node->type == 'dvw_dataset') {
        $table_name = $node->field_dvw_datatable[0]['value'];
        $field_set = _datavizwiz_get_columns_in_table($table_name);

        _datavizwiz_add_columns_to_meta_table($node->nid, $field_set);
      }
      break;
//    case 'update':
//      db_query('UPDATE {node_access_example} SET private = %d WHERE nid = %d', $node->private, $node->nid);
//      break;
//    case 'delete':
//      db_query('DELETE FROM {node_access_example} WHERE nid = %d', $node->nid);
//      break;
  }
}

function _datavizwiz_summary_table($metadata, $table_name) {

  // Get headers for summary table
  $headers = array();
  $id_counter = 1;
  foreach($metadata as $field) {
    $header = array();
    if ($field['visible_summary'] == 1) {
      $header['data'] = $field['field_name'];

      if ($field['sortable'] == 1) {
        $header['field'] = $field['field_name'];
        $header['sort'] = 'asc';
      }
      
      $header['id'] = 'dvwcol' . $id_counter;      
      array_push($headers, $header);
      $id_counter++;
    }
  }
  
  $column_names = '';
  // Get the column names we need
  foreach ($headers as $header) {
    $column_names .= $header['data'] . ',';
  }
  
  $column_names = substr($column_names, 0, strlen($column_names)-1);
  
  $sql = sprintf("SELECT %s FROM {%s}", $column_names, $table_name);
  $sql .= tablesort_sql($headers);
  $query = pager_query($sql, 10);
  
  $tablerows = _datavizwiz_get_rowarray($query);
  
  $output = theme_table($headers, $tablerows);
  $output .= theme('pager', NULL, 0);
  
  return $output;
}

function _datavizwiz_experiment_pie_table() {
  $sql = db_query("SELECT ApplicantCategory, Count(*) as SumTotal FROM import_cn_grant_data group by ApplicantCategory");
  $rows = _datavizwiz_get_rowarray($sql);
  
  //drupal_add_js(drupal_get_path('module', 'datavizwiz') . '/js/excanvas.js');
  //drupal_add_js(drupal_get_path('module', 'datavizwiz') . '/js/visualize2.jQuery.js');  
  //drupal_add_css(drupal_get_path('module', 'datavizwiz') . '/css/visualize.css');  
    
  drupal_add_js(drupal_get_path('module', 'datavizwiz') . '/libraries/charting/flot/jquery.flot.js');  
    drupal_add_js(drupal_get_path('module', 'datavizwiz') . '/libraries/charting/flot/jquery.flot.pie.js');  
    
    foreach ($rows as $row) {
      $data .= '{label:"' . $row["ApplicantCategory"] .'", data:' . $row["SumTotal"] . '},';
    }

    
  //drupal_add_js("$(function(){ $('#experiment').visualize({type: 'line', height: '300px', width: '600px'}); });",'inline');
  drupal_add_js('$(function() {
  $.plot($("#placeholder"), [ '. $data .' ]
  , {
  series: { pie: { show: true } },
  legend: { show: true },
   grid: {
            hoverable: true,
            clickable: true
        }
    }
  );
  } );
$("#placeholder").bind("plothover", pieHover);  
function pieHover(event, pos, obj) 
{
	if (!obj)
                return;
	percent = parseFloat(obj.series.percent).toFixed(2);
	$("#hover").html(\'<span style="font-weight: bold; color: \'+obj.series.color+\'">\'+obj.series.label+\' (\'+percent+\'%)</span>\');
}

','inline');
  
  //return theme_table(array('One', 'Two'), $rows, array('id' => 'experiment'));
  
  return '<div id="placeholder" style="width:100%;height:300px"></div><div id="hover"></div>
    <style type="text/css">div.legend table { width: 350px; } </style>';
  
}

function _datavizwiz_map($rows) {
  $markers .= sprintf("markers.addMarker(new OpenLayers.Marker(new OpenLayers.LonLat(%s,%s),icon.clone()));\n", $row['ApplicantLongitude'], $row['ApplicantLatitude']);
  _datavizwiz_add_javascript($markers);
}

function _datavizwiz_get_dataset_metadata($nid) {
  $sql = db_query("SELECT * FROM {dvw_field_meta} WHERE nid=%s", $nid);
  $rows = _datavizwiz_get_rowarray($sql);
  return $rows;
}

/**
 * Helper method to get columns in a table.  drupal_schema_fields_sql won't work as the imported
 * tables are not part of Drupal's schema.
 * 
 * @param type $table_name 
 */
function _datavizwiz_get_columns_in_table($table_name) {
  // Run a query that will return no results to get the column names.
  $sql = db_query("SELECT column_name,ordinal_position,data_type 
    FROM {information_schema.columns}
    WHERE table_schema = 'dataedgov' and table_name like '{%s}'", $table_name);

  return _datavizwiz_get_rowarray($sql);
}

function _datavizwiz_get_rowarray($dbquery) {
  $rows = array();

  while ($row = db_fetch_array($dbquery)) {
    array_push($rows, $row);
  }

  return $rows;
}

function _datavizwiz_add_columns_to_meta_table($nid, $fields) {

  foreach ($fields as $field) {
    $data = array(
        'nid' => $nid,
        'field_name' => $field['column_name']
    );

    drupal_write_record('dvw_field_meta', $data);
  }
}