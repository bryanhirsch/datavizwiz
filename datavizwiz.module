<?php

/**
 * Comment is published.
 */
define('DVW_TYPE_MAP_LEAFLET', 'MAP_LEAFLET');
define('DVW_TYPE_PIE_FLOT', 'PIE_FLOT');
define('DVW_TYPE_BAR_FLOT', 'BAR_FLOT');
define('DVW_TYPE_HTML', 'HTML');

function theme_datavizwiz_displaydata($node) {

  $data_table_name = $node->field_dvw_datatable[0]['value'];
  $dataset_metadata = _datavizwiz_get_dataset_metadata($node->nid, array('*'));

  if (!isset($_GET['detail'])) {
    $output = _datavizwiz_display_summary_page($node, $data_table_name, $dataset_metadata);
  }
  else {
    $output = _datavizwiz_display_detail_page($node, $data_table_name, $dataset_metadata);
  }

  return $output;
}

function _datavizwiz_display_summary_page($node, $data_table_name, $dataset_metadata) {
  drupal_add_js(drupal_get_path('module', 'datavizwiz') . '/datavizwiz.js');
  drupal_add_css(drupal_get_path('module', 'datavizwiz') . '/datavizwiz.css');

  $summary_panes = _datavizwiz_get_summary_panes($node->nid);

  if (count($summary_panes) > 0) {
    //drupal_add_js(drupal_get_path('module', 'datavizwiz') . '/libraries/jquery.tabify-1.5/jquery.tabify.source.js');
    //drupal_add_js("$( function() { $('#dvwTabs').tabify(); } );", 'inline');
// First, display the tabs.
    $output .= '<div id="dvwPanes">';
    $output .= '<div id="dvwTabs">';
    $output .= '<ul class="dvwMenu">';
    $index = 0;
    $setActive = FALSE;
    foreach ($summary_panes as $pane) {
         $output .= sprintf('<li class="dvwMenu"><a href="pane-%s">%s</a></li>', $index, $pane['name']);     

      $index++;
    }
    $output .= '</ul>';
    $output .= '</div>';

    // Second, display the panes.
    $index = 0;
    $output .= '<div id="dvwTabContent" style="width: 100%; height: 400px" class="dvwContent">';
    foreach ($summary_panes as $pane) {
      switch ($pane['type']) {
        case DVW_TYPE_MAP_LEAFLET:
          $content = _datavizwiz_pane_map_leaflet($node, $index, $pane['options']);
          break;
        case DVW_TYPE_PIE_FLOT:
          $content = _datavizwiz_pane_flot($node, $index, $pane['options'], DVW_TYPE_PIE_FLOT);
          break;
        case DVW_TYPE_BAR_FLOT:
          $content = _datavizwiz_pane_flot($node, $index, $pane['options'], DVW_TYPE_BAR_FLOT);
          break;
        case DVW_TYPE_HTML:
          $content = _datavizwiz_pane_html($node, $index, $pane['options']);
          break;
      }
      
            if (!$setActive) { 
              $output .= sprintf('<div id="pane-%s" class="dvwContent dvwActive" style="width: 100%%; height: 400px">%s</div>', $index, $content);
              $setActive = TRUE;
      } else {
         $output .= sprintf('<div id="pane-%s" class="dvwContent" style="width: 100%%; height: 400px">%s</div>', $index, $content);    
      }
      
      $index++;
    }
    $output .= '</div>';
  }
  $output .= '</div>';

  $output .= _datavizwiz_summary_table($node->nid, $data_table_name);
  return $output;
}

function _datavizwiz_display_detail_page($node, $data_table_name, $dataset_metadata) {
  $importerID = $_GET['detail'];
  $output .= _datavizwiz_detail_page($dataset_metadata, $data_table_name, $importerID);

  return $output;
}

function _datavizwiz_get_summary_panes($nid) {
  $query = sprintf("
      SELECT type, name, options 
      FROM {dvw_summary_views} 
      WHERE nid=%s 
      ORDER BY pane_order", $nid);
  $sql = db_query($query);
  $rows = _datavizwiz_get_rowarray($sql);
  return $rows;
}

function _datavizwiz_pane_map_leaflet($node, $index, $options) {
  drupal_add_js(drupal_get_path('module', 'datavizwiz') . '/libraries/leaflet.js');
  drupal_add_css(drupal_get_path('module', 'datavizwiz') . '/libraries/lf_screen.css');
  drupal_add_css(drupal_get_path('module', 'datavizwiz') . '/libraries/leaflet.css');  

  $pane_id = 'dvwmap' . $pane;
  $opts = json_decode($options);
  
   $output .= '<div id="' . $pane_id . '" style="width: 100%; height: 400px"></div>';
   
   
    
    $script = "$(function() {  var map = new L.Map('". $pane_id . "');

		//var cloudmadeUrl = 'http://{s}.tile.cloudmade.com/BC9A493B41014CAABB98F0471D759707/22677/256/{z}/{x}/{y}.png',
			//	cloudmadeAttribution = 'Map data &copy; 2011 OpenStreetMap contributors, Imagery &copy; 2011 CloudMade',
				//cloudmade = new L.TileLayer(cloudmadeUrl, {maxZoom: 18, attribution: cloudmadeAttribution});

			var url = 'http://a.tiles.mapbox.com/v3/mapbox.mapbox-streets/{z}/{x}/{y}.png',
				attribution = 'Map data &copy; 2011 OpenStreetMap contributors, Imagery &copy; 2011 CloudMade',
				mapbox = new L.TileLayer(url, {maxZoom: 18, attribution: attribution});
			map.setView(new L.LatLng( 39.50, -98.35), 4).addLayer(mapbox);
      
      //fcc = new L.TileLayer('http://a.tiles.mapbox.com/v3/fcc.nbm-wired-speed/{z}/{x}/{y}.png', {maxZoom: 18});
      //map.addLayer(fcc);

";

  $tablename = $node->field_dvw_datatable[0]['value'];
  $lat = $opts->latitude;
  $lon = $opts->longitude;
    

  $sql = sprintf('SELECT %s, %s FROM %s', $lat, $lon, $tablename);
  $result = db_query($sql);
  
  while ($row = db_fetch_array($result)) {
    $script .= sprintf('marker = new L.CircleMarker(new L.LatLng( %s, %s));', $row[$lat], $row[$lon]);
    $script .= 'marker.setRadius(5);';
    $script .= 'map.addLayer(marker);';
    //$script .= sprintf('marker.bindPopup("<b>%s</b><br/>%s, %s");', $row['Applicant'], $row['City'], $row['State']);
  }
    
    
   $script .= '});';
    
  drupal_add_js($script, 'inline');
  
  
  return $output;
}

function _datavizwiz_pane_flot($node, $index, $options, $type) {
  
  $sql = db_query("SELECT AbsolutePriority, Count(*) as SumTotal FROM import_oii_2011_i3 group by AbsolutePriority ORDER BY SumTotal");
    //SELECT Applicant, City, State, Latitude, Longitude FROM import_2011_pn
  $sql = db_query("SELECT ApplicantType, Count(*) as SumTotal FROM import_2011_pn group by ApplicantType ORDER BY SumTotal");
  $rows = _datavizwiz_get_rowarray($sql);

  drupal_add_js(drupal_get_path('module', 'datavizwiz') . '/libraries/charting/flot/jquery.flot.min.js');
  drupal_add_js(drupal_get_path('module', 'datavizwiz') . '/libraries/charting/flot/jquery.flot.pie.min.js');
  

  $pane = 'dvwpane' . $index;

  if ($type == DVW_TYPE_PIE_FLOT) {
  foreach ($rows as $row) {
    $data .= '{label:"' . $row["ApplicantType"] . '", data:' . $row["SumTotal"] . '},';
  }
  
  drupal_add_js('$(function() {
    $.plot($("#' . $pane .'"), [ ' . $data . ' ]
    , {
    series: { pie: { show: true } },
    legend: { show: true },
    grid: {
    clickable: true
    }
    }
    );
    } );

    ', 'inline');
  } else {
    
      $tickcount=0;
  foreach ($rows as $row) {
    
    $data .= sprintf('[%s,%s],', $tickcount,$row["SumTotal"]);
 
    
    $ticks .= sprintf('[%s,"%s"],', $tickcount,$row["ApplicantType"]);
    $tickcount++;
  }
  
  drupal_add_js('$(function() {$.plot(
   $("#'. $pane .'"),
   [
    {
      label: "Total Things Per Year",
      data: [ ' . $data . ' ],
              color: "#000",
      bars: {
        show: true,
        barWidth: 0.2,
        align: "center"
      }   
    }
 ],
 {
   xaxis: {
     ticks: [
'. $ticks .'
     ]
   }   
 }
);
});
', 'inline');
  }
  //return theme_table(array('One', 'Two'), $rows, array('id' => 'experiment'));

  return '<div id="' . $pane .'" style="width:100%;height:400px"></div>
    <style type="text/css">div.legend table { width: 350px; } </style>
<div id=”initialPlaceHolder” style=”width:600px;height:400px”></div>';
  
  
  return $output;
}

function _datavizwiz_pane_html($node, $index, $options) {
  return $options;
}


function datavizwiz_theme_registry_alter(&$theme_registry) {
  // Remove the first path under 'node' which is the one for the
  // module that created the template
  $template = 'node';
  $originalpath = array_shift($theme_registry[$template]['theme paths']);

  // Get the path to your module
  $modulepath = drupal_get_path('module', 'datavizwiz');

  // Stick the original path and then your module path back on top
  array_unshift($theme_registry[$template]['theme paths'], $originalpath, $modulepath);
}

function datavizwiz_theme() {
  return array(
    'datavizwiz_displaydata' => array(
      'arguments' => array('node' => NULL),
    ),
    'datavizwiz_fields_form' => array(
      'arguments' => array('form' => NULL),
    ),
    'datavizwiz_sort_form' => array(
      'arguments' => array('form' => NULL),
    ),
    'datavizwiz_summary_panes_form' => array(
      'arguments' => array('form' => NULL),
    ),
  );
}

function datavizwiz_graph() {
  //return '';
  return _datavizwiz_experiment_pie_table();
}

function _datavizwiz_add_tabhtml() {
  return '<div class="tabs">
        <ul id="dvwTabs">
            <li class="active"><a href="#first">Map</a></li>
            <li><a href="#second">Pie</a></li>
            <li><a href="#third">Bar</a></li>
        </ul>
        <div id="dvwTabContent">
            <div id="first" class="dvwTab">
            <div id="datamap" style="height: 300px; width: 600px;"></div>
            </div>
            <div id="second" class="dvwTab" style="height: 300px; width: 600px;">' .
          _datavizwiz_experiment_pie_table() .
          '</div>
            <div id="third" class="dvwTab" style="height: 300px; width: 600px;">
                <h2>Third</h2>
                <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>
            </div>
        </div>
    </div>';
}

function _datavizwiz_quick_json() {
  $options = array();
  $options['latitude-field'] = 'latitude';
  $options['longitude-field'] = 'longitude';
}

function _datavizwiz_add_javascript($markers) {
  $script = "        var map, layer, markers;

        function mapInit(){
            //OpenLayers.ProxyHost='/proxy/?url=';
            map = new OpenLayers.Map('datamap');
            
            layer = new OpenLayers.Layer.OSM( 'MapBox Layer', 'http://a.tiles.mapbox.com/v3/mapbox.world-bright/\${z}/\${x}/\${y}.png'  );
                
            
            map.addLayer(layer);

            markers = new OpenLayers.Layer.Markers('Markers');
            map.addLayer(markers);

            var size = new OpenLayers.Size(21,25);
            var offset = new OpenLayers.Pixel(-(size.w/2), -size.h);
            var icon = new OpenLayers.Icon('http://www.openlayers.org/dev/img/marker.png',size,offset);
            markers.addMarker(new OpenLayers.Marker(new OpenLayers.LonLat(-77.35, 39.50),icon));
            " . $markers . "

            map.addControl(new OpenLayers.Control.LayerSwitcher());

           map.setCenter(new OpenLayers.LonLat(-98.35, 39.50), 3);

        };
";
  drupal_add_js($script, 'inline');
}

/**
 * Implementation of hook_nodeapi().
 *
 * The module will add/modify the datavizwiz tables as nodes are inserted/updated.
 */
function datavizwiz_nodeapi(&$node, $op, $arg = NULL) {
  switch ($op) {
//    case 'load':
//      $node->private = db_result(db_query('SELECT private FROM {node_access_example} WHERE nid = %d', $node->nid));
//      break;
    case 'insert':
      if ($node->type == 'dvw_dataset') {
        $table_name = $node->field_dvw_datatable[0]['value'];
        $field_set = _datavizwiz_get_columns_in_table($table_name);

        _datavizwiz_add_columns_to_meta_table($node->nid, $field_set);
        //drupal_goto('datavizwiz/edit', $node->nid);
      }
      break;
//    case 'update':
//      db_query('UPDATE {node_access_example} SET private = %d WHERE nid = %d', $node->private, $node->nid);
//      break;
//    case 'delete':
//      db_query('DELETE FROM {node_access_example} WHERE nid = %d', $node->nid);
//      break;
  }
}

function datavizwiz_form_alter(&$form, &$form_state, $form_id) {
  if ($form['#token'] == 'dvw_dataset_node_form' && $form_state['submitted'] == FALSE) {

    $tables = _datavizwiz_get_import_tables();
    $tablenames = array();
    foreach ($tables as $table) {
      array_push($tablenames, array($table['table_name'] => $table['table_name']));
    }


    // $form['field_dvw_datatable']['#type'] = 'select';
    // $form['field_dvw_datatable']['#options'] = $tablenames;
  }
}

function datavizwiz_menu() {
  $items['admin/datavizwiz/edit/%'] = array(
    'title' => 'Manage Dataset',
    'page callback' => 'datavizwiz_tab_dataset',
    'access arguments' => array('access administration pages'),
    'file' => 'includes/datavizwiz.admin.inc',
    'type' => MENU_CALLBACK,
    'page arguments' => array(3),
  );

  $items['admin/datavizwiz/edit/%/main'] = array(
    'title' => 'Dataset',
    'page callback' => 'datavizwiz_tab_dataset',
    'access arguments' => array('access administration pages'),
    'file' => 'includes/datavizwiz.admin.inc',
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'page arguments' => array(3),
  );

    $items['admin/datavizwiz/edit/%/summary_pane'] = array(
    'title' => 'Summary panes',
    'page callback' => 'datavizwiz_tab_summary_panes',
    'page arguments' => array(3),
    'access arguments' => array('access administration pages'),
    'file' => 'includes/datavizwiz.admin.inc',
    'type' => MENU_LOCAL_TASK,
    'weight' => 1,
  );
  
   $items['admin/datavizwiz/edit/%/summary_pane/%/%'] = array(
    'title' => 'Manage Dataset',
    'page callback' => 'datavizwiz_tab_summary_pane_edit',
    'access arguments' => array('access administration pages'),
    'file' => 'includes/datavizwiz.admin.inc',
    'type' => MENU_CALLBACK,
    'page arguments' => array(3,5,6),
  );
    
  $items['admin/datavizwiz/edit/%/fields'] = array(
    'title' => 'Manage fields',
    'page callback' => 'datavizwiz_tab_manage_fields',
    'page arguments' => array(3),
    'access arguments' => array('access administration pages'),
    'file' => 'includes/datavizwiz.admin.inc',
    'type' => MENU_LOCAL_TASK,
    'weight' => 5,
  );

  $items['admin/datavizwiz/edit/%/sort_summary'] = array(
    'title' => 'Summary Sort',
    'page callback' => 'datavizwiz_tab_sort_summary',
    'page arguments' => array(3),
    'access arguments' => array('access administration pages'),
    'file' => 'includes/datavizwiz.admin.inc',
    'type' => MENU_LOCAL_TASK,
    'weight' => 10,
  );

  $items['admin/datavizwiz/edit/%/sort_detail'] = array(
    'title' => 'Detail Sort',
    'page callback' => 'datavizwiz_tab_sort_detail',
    'page arguments' => array(3),
    'access arguments' => array('access administration pages'),
    'file' => 'includes/datavizwiz.admin.inc',
    'type' => MENU_LOCAL_TASK,
    'weight' => 20,
  );

  $items['node/%/dataset'] = array(
    'title' => 'Edit Dataset',
    'page callback' => 'datavizwiz_tab_dataset',
    'page arguments' => array(2),
    'access arguments' => array('access administration pages'),
    'file' => 'includes/datavizwiz.admin.inc',
    'type' => MENU_LOCAL_TASK,
    'weight' => 999,
  );


  //TODO:  Assign permission
  return $items;
}

function _datavizwiz_summary_table($nid, $table_name) {

  $query = sprintf("
      SELECT field_name, display_name, sortable 
      FROM {dvw_field_meta} 
      WHERE nid=%s AND visible_summary=1 
      ORDER BY weight_summary", $nid);
  $sql = db_query($query);
  $rows = _datavizwiz_get_rowarray($sql);

  // Get headers for summary table
  $headers = array();
  $id_counter = 1;
  foreach ($rows as $field) {
    $header = array();
    $header['data'] = $field['field_name'];

    if ($field['sortable'] == 1) {
      $header['field'] = $field['field_name'];
      $header['sort'] = 'asc';
    }

    $header['id'] = 'dvwcol' . $id_counter;
    array_push($headers, $header);
    $id_counter++;
  }

  $column_names = '';
  // Get the column names we need
  foreach ($headers as $header) {
    $column_names .= $header['data'] . ',';
  }

  $column_names = substr($column_names, 0, strlen($column_names) - 1);
  $sql = sprintf("SELECT ImporterID, %s FROM {%s}", $column_names, $table_name);
  $sql .= tablesort_sql($headers);
  $query = pager_query($sql, 25);

  $tablerows = _datavizwiz_get_summaryarray($query);

  $output = theme_table($headers, $tablerows);
  $output .= theme('pager', NULL, 0);

  return $output;
}

function _datavizwiz_detail_page($metadata, $table_name, $importerID) {

  // Get headers for summary table
  $headers = array();
  $id_counter = 1;
  foreach ($metadata as $field) {
    $header = array();
    if ($field['visible_detail'] == 1) {
      $header['data'] = $field['field_name'];

      $header['id'] = 'dvwcol' . $id_counter;
      array_push($headers, $header);
      $id_counter++;
    }
  }

  $column_names = '';
  // Get the column names we need
  foreach ($headers as $header) {
    $column_names .= $header['data'] . ',';
  }

  $column_names = substr($column_names, 0, strlen($column_names) - 1);
  $sql = sprintf("SELECT %s FROM {%s} WHERE ImporterID=%s", $column_names, $table_name, $importerID);


  $result = db_query(db_rewrite_sql($sql));
  if ($row = db_fetch_array($result)) {
    foreach ($row as $key => $value) {
      $output .= '<div>' . $key . ': ' . $value . '</div>';
    }
  }

  return $output;
}

function _datavizwiz_experiment_pie_table() {
  $sql = db_query("SELECT AbsolutePriority, Count(*) as SumTotal FROM import_oii_2011_i3 group by AbsolutePriority");
  $rows = _datavizwiz_get_rowarray($sql);

  drupal_add_js(drupal_get_path('module', 'datavizwiz') . '/libraries/charting/flot/jquery.flot.min.js');
  drupal_add_js(drupal_get_path('module', 'datavizwiz') . '/libraries/charting/flot/jquery.flot.pie.min.js');




  foreach ($rows as $row) {
    $data .= '{label:"' . $row["AbsolutePriority"] . '", data:' . $row["SumTotal"] . '},';
  }


  drupal_add_js('$(function() {
    $.plot($("#placeholder"), [ ' . $data . ' ]
    , {
    series: { pie: { show: true } },
    legend: { show: true },
    grid: {
    clickable: true
    }
    }
    );
    } );

    ', 'inline');

  //return theme_table(array('One', 'Two'), $rows, array('id' => 'experiment'));

  return '<div id="placeholder" style="width:100%;height:300px"></div>
    <style type="text/css">div.legend table { width: 350px; } </style>
    <div style=”position: absolute; left: -2000px;”>
<div id=”initialPlaceHolder” style=”width:600px;height:300px”></div>
</div>';
}

function _datavizwiz_map($rows) {
  $markers .= sprintf("markers.addMarker(new OpenLayers.Marker(new OpenLayers.LonLat(%s,%s),icon.clone()));\n", $row['Longitude'], $row['Latitude']);
  _datavizwiz_add_javascript($markers);
}

function _datavizwiz_get_dataset_metadata($nid, $field_array) {
  $fields = implode(',', $field_array);
  $query = sprintf("SELECT %s FROM {dvw_field_meta} WHERE nid=%s", $fields, $nid);
  $sql = db_query($query);
  $rows = _datavizwiz_get_rowarray($sql);
  return $rows;
}

/**
 * Helper method to get columns in a table.  drupal_schema_fields_sql won't work as the imported
 * tables are not part of Drupal's schema.
 * 
 * @param type $table_name 
 */
function _datavizwiz_get_columns_in_table($table_name) {
  // Run a query that will return no results to get the column names.
  $sql = db_query("SELECT column_name,ordinal_position,data_type 
    FROM {information_schema.columns}
    WHERE table_schema = 'acquia_drupal' and table_name like '{%s}'", $table_name);

  //TODO:  Find the proper table name above.

  return _datavizwiz_get_rowarray($sql);
}

function _datavizwiz_get_import_tables() {
  // Run a query that will return no results to get the column names.
  $sql = db_query("SELECT table_name 
    FROM {information_schema.tables}
    WHERE table_schema = 'acquia_drupal' and table_name like 'import\_%'");

  //TODO:  Find the proper table name above.

  return _datavizwiz_get_rowarray($sql);
}

function _datavizwiz_get_rowarray($dbquery) {
  $rows = array();

  while ($row = db_fetch_array($dbquery)) {
    array_push($rows, $row);
  }

  return $rows;
}

function _datavizwiz_get_summaryarray($dbquery) {
  $rows = array();

  while ($row = db_fetch_array($dbquery)) {
    $importerID = $row['ImporterID'];
    $row = array_slice($row, 1, count($row) - 1, TRUE);
    $keys = array_keys($row);
    $first_cell = $keys[0];
    $row[$first_cell] = '<a href="?detail=' . $importerID . '">' . $row[$first_cell] . '</a>';
    array_push($rows, $row);
  }

  return $rows;
}

function _datavizwiz_add_columns_to_meta_table($nid, $fields) {
  $i = -30;
  foreach ($fields as $field) {
    $data = array(
      'nid' => $nid,
      'field_name' => $field['column_name'],
      'display_name' => $field['column_name'],
      'order_summary' => $i,
      'order_detail' => $i,
    );

    drupal_write_record('dvw_field_meta', $data);
    $i++;
  }
}